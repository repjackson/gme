template(name='chart')
    +ticker
template(name='home')
    // +small_ticker
    // +mini_chart
    +symbol_overview
    .ui.stackable.padded.grid
        .four.wide.column
            .ui.header
                |12.4 billion
                +fluent name='peeled-banana'
                | plucked
        .sixteen.wide.column
            .ui.header 
                i.blog.icon
                |news
            each articles
                .ui.segment
                    .ui.header #{title} #{when}
                    .ui.basic.segment.smallscroll
                        |!{content}
                    each tags 
                        .ui.label #{this}
        .sixteen.wide.column
            .ui.inline.header #{counter}
            .ui.inline.header    
                |#{current_group}
            .ui.icon.circular.basic.button.add_post
                i.plus.icon
            if picked_tags
                // if many_tags
                //     a#clear_tags.ui.black.invert.icon.compact.button.select_term
                //         i.remove.icon
                each picked_tags
                    +unselect_tag
            // .ui.icon.small.input
            //     i.search.icon
            //     input.search_group_tag(type='text' value=group_query placeholder="#{counter} results")
            //     // .ui.label #{this}
            if result_tags.count
                each result_tags
                    +tag_selector
            // else
            //     i.big.grey.loading.yin.yang.icon
        .four.wide.center.aligned.column.scrolling
            i.big.clock.grey.icon(title='when tags')
            if picked_time_tags
                each picked_time_tags
                    a.unselect_time_tag.ui.active.large.compact.button(href='#')
                        strong #{this}
            each time_tags
                a.ui.basic.large.label.zoomer.select_time_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                    strong #{name}
            div
            i.big.smile.grey.icon(title='where tags')
            if picked_emotion
                each picked_emotion
                    a.unpick_emotion.ui.active.large.compact.button(href='#')
                        strong #{this}
            each emotion_results
                if name
                    a.ui.basic.large.label.zoomer.pick_emotion(title="#{count} results" class="#{selector_class} #{thinking_class}")
                        strong #{name}
            div
            div
            i.big.marker.grey.icon(title='where tags')
            if picked_location_tags
                each picked_location_tags
                    a.unselect_location_tag.ui.active.large.compact.button(href='#')
                        strong #{this}
            each location_tags
                a.ui.basic.large.label.zoomer.select_location_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                    strong #{name}
            div
            i.big.users.grey.icon(title='where tags')
            if picked_people_tags
                each picked_people_tags
                    a.unselect_people_tag.ui.active.large.compact.button(href='#')
                        strong #{this}
            each people_tags
                a.ui.basic.large.label.zoomer.pick_people_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                    strong #{name}
            div
            i.big.plus.grey.icon(title='where tags')
            if picked_timestamp_tags
                each picked_timestamp_tags
                    a.unpick_timestamp_tag.ui.active.large.compact.button(href='#')
                        strong #{this}
            each timestamp_tag_results
                a.ui.basic.large.label.zoomer.pick_timestamp_tag(title="#{count} results" class="#{selector_class} #{thinking_class}")
                    strong #{name}
            .ui.hidden.divider
            with emotion_avg
                // .ui.list
                //     .item {{ to_percent avg_sent_score}}% sentiment
                //     .item {{ to_percent avg_joy_score}}% joy
                //     .item {{ to_percent avg_anger_score}}% anger
                //     .item {{ to_percent avg_sadness_score}}% sad
                //     .item {{ to_percent avg_disgust_score}}% disgust
                //     .item {{ to_percent avg_fear_score}}% fear
                if kve 'doc_sentiment_label' 'positive'
                    span.say.ui.green.text.invert(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}% #{doc_sentiment_label}
                        |&nbsp;
                    div.rounded.invert(style="height:5px;width:{{to_percent doc_sentiment_score}}%;background-color:green" title="{{to_percent doc_sentiment_score}}% #{doc_sentiment_label}")
                else if kve 'doc_sentiment_label' 'negative'
                    span.say.ui.red.text.invert(class="{{calculated_size doc_sentiment_score}}") {{ to_percent doc_sentiment_score }}%  #{doc_sentiment_label} 
                        |&nbsp;
                    div.rounded.invert(style="height:5px;width:{{abs_percent doc_sentiment_score}}%;background-color:red" title="{{abs_percent doc_sentiment_score}}% #{doc_sentiment_label}")
                    
                .ui.invert.inverted.header(class="{{calculated_size avg_sent_score}}") {{ to_percent avg_sent_score }}% sentiment
                    |&nbsp;
                // div.rounded.invert(style="height:5px;width:{{to_percent avg_sent_score}}%;background-color:green" title="{{to_percent avg_sent_score}}% joy")
      
                span.say.ui.green.text.invert(class="{{calculated_size avg_joy_score}}") {{ to_percent avg_joy_score }}% joy 
                    |&nbsp;
                div.rounded.invert(style="height:5px;width:{{to_percent avg_joy_score}}%;background-color:green" title="{{to_percent avg_joy_score}}% joy")
                //- if above_50 'avg_sadness_score'
                    //- .spacer
                span.say.ui.blue.text.invert(class="{{calculated_size avg_sadness_score}}") {{ to_percent avg_sadness_score}}% sad 
                    |&nbsp;
                div.rounded.invert(style="height:5px;width:{{to_percent avg_sadness_score}}%;background-color:blue" title="{{to_percent avg_sadness_score}}% sad")
                //- if above_50 'avg_fear_score'
                    //- .spacer
                span.say.ui.grey.text.invert(class="{{calculated_size avg_fear_score}}") {{ to_percent avg_fear_score }}% fear 
                    |&nbsp;
                div.rounded.invert(style="height:5px;width:{{to_percent avg_fear_score}}%;background-color:grey" title="{{to_percent avg_fear_score}}% fear")
                //- if above_50 'avg_disgust_score'
                    //- .spacer
                span.say.ui.orange.text.invert(class="{{calculated_size avg_disgust_score}}") {{ to_percent avg_disgust_score }}% disgust 
                    |&nbsp;
                div.rounded.invert(style="height:5px;width:{{to_percent avg_disgust_score}}%;background-color:orange" title="{{to_percent avg_disgust_score}}% disgust")
                //- if above_50 'avg_anger_score'
                    //- .spacer
                span.say.ui.red.text.invert(class="{{calculated_size avg_anger_score}}") {{ to_percent avg_anger_score }}% anger 
                    |&nbsp;
                div.rounded.invert(style="height:5px;width:{{to_percent avg_anger_score}}%;background-color:red" title="{{to_percent avg_anger_score}}% anger")

            
        .twelve.wide.column
            |sort by
            if skve 'group_sort_key' 'points'
                .ui.circular.black.icon.button.set_sort_points
                    i.large.thumbs.up.icon
            else
                .ui.circular.basic.icon.button.set_sort_points
                    i.large.thumbs.up.icon
            if skve 'group_sort_key' '_timestamp'
                .ui.circular.black.icon.button.set_sort_timestamp
                    i.clock.large.icon
            else
                .ui.circular.basic.icon.button.set_sort_timestamp
                    i.clock.large.icon
            if skve 'group_sort_key' 'views'
                .ui.circular.black.icon.button.set_sort_views
                    i.eye.large.icon
            else
                .ui.circular.basic.icon.button.set_sort_views
                    i.eye.large.icon
            // .ui.inline.header
            //     |view
            // +group_view_mode key='video' icon='video'
            // +group_view_mode key='image' icon='image'
            // +group_view_mode key='content' icon='content'
            if one_post
                .ui.one.column.centered.padded.grid.scrolling
                    each posts
                        +post_card_med
            else if two_posts
                .ui.two.column.centered.padded.grid.scrolling
                    each posts
                        +post_card_med
            else 
                .ui.stackable.two.column.padded.grid.scrolling
                    if posts.count
                        each posts
                            +post_card
                    else
                        i.massive.grey.loading.yin.yang.icon

         
template(name='floor')                    
    iframe(width='100%' height='800' src="https://gmefloor.com/" frameborder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowfullscreen='')
                    
template(name='finance_bar')
    .sixteen.wide.column.toggle_finance_details
        .ui.green.small.progress.bar.pointer
            .bar
                .progress
            .label
                |monthly budget progress / 20k
        if viewing_finance_details
            .ui.stackable.grid
                .two.column.row
                    .column
                        .ui.header #{finance_stat.membership_count} memberships totaling $#{finance_stat.total_membership_sum}
                        // .ui.header income from events
                    .column
                        // .ui.header most generative event
                        // .ui.header most generative member
                            
                                    
template(name='home_request_card')
    .ui.segment.view_request.pointer
        .content
            if youtube_id
                +youtube_view key='youtube_id' direct=true
            else if image_id
                img.ui.raw.image(src="{{c.url image_id width=400 height=300 crop='fill'}}")    

            .header
                .ui.inline.header #{point_bounty}p: #{title}
                if _author.profile_image_id
                    with _author
                        img.ui.avatar.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=user_class title=shortname)
                | #{_author.name}
            |!{description}
            .meta #{when}
            // each tags 
            //     .ui.tiny.basic.label #{this}
            if doc_comments.count
                .meta
                    each doc_comments 
                        i.grey.chat.outline.icon
                        img.ui.avatar.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class)
                        |#{body}
                        div


                                    
template(name='home_offer_card')
    .ui.segment.view_offer.pointer
        .content
            if youtube_id
                +youtube_view key='youtube_id' direct=true
            else if image_id
                img.ui.raw.image(src="{{c.url image_id width=400 height=300 crop='fill'}}")    
            .header
                .ui.inline.header #{title}
                if _author.profile_image_id
                    with _author
                        img.ui.avatar.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=user_class title=shortname)
                | #{_author.name}
            // |!{description}
            .meta #{when}
            if point_price
                |#{point_price}p
            if dollar_price
                |$#{dollar_price}
            // each tags 
            //     .ui.tiny.basic.label #{this}
            +comments_view_small
            
            
template(name='comments_view_small')            
    if doc_comments.count
        .meta
            each doc_comments 
                i.grey.chat.outline.icon
                img.ui.avatar.image(src="{{c.url _author.profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class)
                |#{body}
                div


                                    
                                    
template(name='home_event_card')
    a.ui.fluid.card(href="/event/#{_id}/view")
        img.ui.image(src="{{c.url image_id height=200 width=500 crop='fill'}}")
        .content
            .header
                | #{title} 
            .meta    
                |{{medium_date date}}
                |#{time}
                // |{{home_long_date start_datetime}}
                // .ui.small.grey.inline.header {{from_now start_datetime}}
            .meta    
                .ui.inline.small.header $#{usd_price} / #{point_price}p
            .meta
                if fac
                    |led by
                    if fac.profile_image_id
                        with fac
                            img.ui.avatar.spaced.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=user_class title=shortname)
                    | #{fac.name}
            // .meta #{when}
            .description 
            if location
                i.marker.icon 
                |#{location}
            div 
        .content
            |#{going.count}
            i.checkmark.green.large.icon
            each going
                img.ui.avatar.image(src="{{c.url profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class title=shortname)
            // i.question.orange.large.icon
            // | #{maybe_user_ids.length}
            // each maybe_going
            //     img.ui.avatar.image(src="{{c.url profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class title=shortname)
            // | #{not_user_ids.length}
            // i.remove.red.large.icon
            // each not_going
            //     img.ui.avatar.image(src="{{c.url profile_image_id height=200 width=200 gravity='face' crop='fill'}}" class=user_class title=shortname)
            +comments_view_small
                               
                               
                               
                                    
template(name='debit_card')
    .ui.card.pointer.view_debit
        if image_id
            img.ui.image(src="{{c.url image_id height=200 width=500 crop='fill'}}")
        .content
            .description 
                if _author.profile_image_id
                    with _author
                        img.ui.avatar.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=user_class)
                | #{_author.shortname}
                a.ui.inline.header(href="/debit/#{_id}/view") #{amount}p
                .ui.inline.header >
                if recipient.profile_image_id
                    with recipient
                        img.ui.avatar.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=user_class)
                |#{recipient.shortname}
            .meta #{when}
            .description.f11
                |#{description}
            .spacer
            each tags 
                .ui.small.basic.label #{this}
            if upvoter_ids
                +voting_tiny
            +comments_view_small
                                    
template(name='join_button')
    .ui.fluid.green.button.join
        i.checkmark.icon
        |join




template(name='home_shift_card')
    a.ui.card(href="/shift/#{_id}/view")
        .content
            .header
                .ui.inline.header
                // if _author.profile_image_id
                //     img.ui.avatar.image(src="{{c.url _author.profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=user_class)
                // | #{_author_username}
                .item from {{from_now start_datetime}} > {{from_now end_datetime}}
                if shift_contributors 
                    each shift_contributors
                        img.ui.avatar.image(src="{{c.url profile_image_id height=500 width=500 gravity='face' crop='fill'}}" class=user_class)
                        |#{username}
            .meta #{when}
            .description 
                |#{description}
            each tags 
                .ui.tiny.basic.label #{this}
